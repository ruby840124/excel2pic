[{"C:\\Users\\ruby_feng.PFT\\Desktop\\sideproject\\excel2pic\\excel2pic\\src\\index.js":"1","C:\\Users\\ruby_feng.PFT\\Desktop\\sideproject\\excel2pic\\excel2pic\\src\\App.js":"2","C:\\Users\\ruby_feng.PFT\\Desktop\\sideproject\\excel2pic\\excel2pic\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":1611195180646,"results":"4","hashOfConfig":"5"},{"size":4533,"mtime":1611226240228,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1611195180646,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1u7uq8g",{"filePath":"11","messages":"12","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\ruby_feng.PFT\\Desktop\\sideproject\\excel2pic\\excel2pic\\src\\index.js",[],["16","17"],"C:\\Users\\ruby_feng.PFT\\Desktop\\sideproject\\excel2pic\\excel2pic\\src\\App.js",["18","19","20"],"import React, { Component } from 'react';\nimport Konva from 'konva';\nimport { Image } from 'react-konva';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      image: null,\n      imageUrl: '',\n      stage: null, \n      canvasWidth: 250, \n      canvasHeight: 250, \n      boxArray:['診所名稱', '評論者', '評論']};\n  }\n\n  componentDidMount(){\n    this.initStage();\n  }\n\n  initStage = () => {\n    const {canvasWidth, canvasHeight} = this.state;\n    const stage = new Konva.Stage({\n      x:0,\n      y:0,\n      container: 'container',\n      width: canvasWidth,\n      height: canvasHeight,\n    });\n    for (let i = 0; i < 3; i++) {\n      this.addBox(stage, i);\n    }\n  }\n\n  addBox = (stage, i) => {\n    const {canvasWidth, boxArray} = this.state;\n    const layer = new Konva.Layer();\n    const box = new Konva.Group({\n        Zindex: 10,\n        x: canvasWidth / 2 - 50,\n        y: 10 + i*40,\n        width: 100,\n        height: 25,\n        fill: '#00D2FF',\n        stroke: 'black',\n        strokeWidth: 4,\n        draggable: true,\n    });\n\n    box.add(new Konva.Rect({\n      width: 100,\n      height: 25,\n      fill: 'lightblue'\n    }));\n\n    box.add(new Konva.Text({\n      text: boxArray[i],\n      fontSize: 18,\n      fontFamily: 'Calibri',\n      fill: '#000',\n      width: 100,\n      padding: 5,\n      align: 'center'\n    }));\n\n    box.on('mouseover', function () {\n        document.body.style.cursor = 'pointer';\n    });\n\n    box.on('mouseout', function () {\n        document.body.style.cursor = 'default';\n    });\n\n    layer.add(box);\n    stage.add(layer);\n    this.setState({stage: stage});\n  }\n\n  download = () => {\n    const {stage} = this.state;\n    const a = document.createElement('a');\n    const event = new MouseEvent('click');\n    a.download = 'test.jpg';\n    a.href = stage.toDataURL({ pixelRatio: 1 });\n    a.dispatchEvent(event);\n  }\n\n  handleImageChange = (e) => {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n\t\t\t\timageUrl: reader.result\n        });\n      this.image2Canvas();\n    }\n    reader.readAsDataURL(file);\n  }\n\n  checkImageSize = (imgWidth, imgHeight, img) => {\n    const {stage} = this.state;\n    const uploadBgBlock = document.getElementById(\"uploadBgBlock\");\n    const bgBlockWidth = uploadBgBlock.offsetWidth;\n    const bgBlockHeight = uploadBgBlock.offsetHeight;\n    const layer = new Konva.Layer();\n    let size = 0.2;\n\n    console.log(bgBlockWidth, bgBlockHeight);\n    console.log(imgHeight, imgWidth);\n    while(bgBlockWidth < imgWidth || bgBlockHeight < imgHeight){\n      imgHeight  = imgHeight / size;\n      imgWidth  = imgWidth / size;\n      size = size + 0.2;\n    }\n\n    const bg = new Konva.Image({\n      x: 0,\n      y: 0,\n      image: img,\n      width: imgWidth,\n      height: imgHeight,\n    });\n    layer.add(bg);\n    layer.batchDraw();\n    stage.width(imgWidth);\n    stage.height(imgHeight);\n    stage.add(layer);\n\n    for (let i = 0; i < 3; i++) {\n      this.addBox(stage, i);\n    }\n\n    this.setState({stage: stage, canvasWidth: imgWidth, canvasHeight: imgHeight});\n\n  }\n\n  image2Canvas = (e) => {\n    const {imageUrl} = this.state;\n    const uploadBgBlock = document.getElementById(\"uploadBgBlock\");\n    const img = new window.Image();\n    img.onload = () => {\n      this.checkImageSize(img.width, img.height, img);\n    }\n    img.src = imageUrl;\n  }\n\n  download = () =>{\n    const {stage} = this.state;\n    const a = document.createElement('a');\n    const event = new MouseEvent('click');\n    a.download = 'test.jpg';\n    a.href = stage.toDataURL();\n    a.dispatchEvent(event);\n  }\n\n  render() {\n    const {canvasWidth, canvasHeight} = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"topBlock\">\n          <div className=\"topText\">excel2picture demo</div>\n        </div>\n        <div className=\"cotentBlock\">\n          <div className=\"uploadBlock\">\n            <div className=\"uploadBgBlock\" id=\"uploadBgBlock\">\n              <input type=\"file\" onChange={this.handleImageChange} accept=\"image/*\" />\n              <div className=\"container\" id=\"container\" style={{width: canvasWidth, height: canvasHeight}}></div>\n            </div>\n            <div className=\"uploadExcelBlock\">\n                <span>excelBlock</span>\n            </div>\n          </div>\n          <button className=\"readyButton\" onClick={this.download}>開始生成圖片</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\ruby_feng.PFT\\Desktop\\sideproject\\excel2pic\\excel2pic\\src\\reportWebVitals.js",[],{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":1,"column":17,"nodeType":"27","messageId":"28","endLine":1,"endColumn":26},{"ruleId":"25","severity":1,"message":"29","line":3,"column":10,"nodeType":"27","messageId":"28","endLine":3,"endColumn":15},{"ruleId":"25","severity":1,"message":"30","line":141,"column":11,"nodeType":"27","messageId":"28","endLine":141,"endColumn":24},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'uploadBgBlock' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]