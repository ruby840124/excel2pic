{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","initStage","state","canvasWidth","canvasHeight","stage","Konva","Stage","x","y","container","width","height","i","addBox","boxArray","layer","Layer","box","Group","Zindex","fill","stroke","strokeWidth","draggable","add","Rect","Text","text","fontSize","fontFamily","padding","align","on","document","body","style","cursor","setState","download","a","createElement","event","MouseEvent","href","toDataURL","pixelRatio","dispatchEvent","handleImageChange","e","reader","FileReader","file","target","files","onloadend","imageUrl","result","image2Canvas","readAsDataURL","img","window","Image","onload","yoda","image","batchDraw","src","this","className","type","onChange","accept","id","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.170d63f5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Konva from 'konva';\nimport { Image } from 'react-konva';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      image: null,\n      imageUrl: '',\n      stage: null, \n      canvasWidth: 250, \n      canvasHeight: 250, \n      boxArray:['診所名稱', '評論者', '評論']};\n  }\n\n  componentDidMount(){\n    this.initStage();\n  }\n\n  initStage = () => {\n    const {canvasWidth, canvasHeight} = this.state;\n    const stage = new Konva.Stage({\n      x:0,\n      y:0,\n      container: 'container',\n      width: canvasWidth,\n      height: canvasHeight,\n    });\n    for (let i = 0; i < 3; i++) {\n      this.addBox(stage, i);\n    }\n  }\n\n  addBox = (stage, i) => {\n    const {canvasWidth, boxArray} = this.state;\n    const layer = new Konva.Layer();\n    const box = new Konva.Group({\n        Zindex: 10,\n        x: canvasWidth / 2 - 50,\n        y: 10 + i*40,\n        width: 100,\n        height: 25,\n        fill: '#00D2FF',\n        stroke: 'black',\n        strokeWidth: 4,\n        draggable: true,\n    });\n\n    box.add(new Konva.Rect({\n      width: 100,\n      height: 25,\n      fill: 'lightblue'\n    }));\n\n    box.add(new Konva.Text({\n      text: boxArray[i],\n      fontSize: 18,\n      fontFamily: 'Calibri',\n      fill: '#000',\n      width: 100,\n      padding: 5,\n      align: 'center'\n    }));\n\n    box.on('mouseover', function () {\n        document.body.style.cursor = 'pointer';\n    });\n\n    box.on('mouseout', function () {\n        document.body.style.cursor = 'default';\n    });\n\n    layer.add(box);\n    stage.add(layer);\n    this.setState({stage: stage});\n  }\n\n  download = () => {\n    const {stage} = this.state;\n    const a = document.createElement('a');\n    const event = new MouseEvent('click');\n    a.download = 'test.jpg';\n    a.href = stage.toDataURL({ pixelRatio: 1 });\n    a.dispatchEvent(event);\n  }\n\n  handleImageChange = (e) => {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n\t\t\t\timageUrl: reader.result\n        });\n      this.image2Canvas();\n    }\n    reader.readAsDataURL(file);\n  }\n\n  image2Canvas = (e) => {\n    const {canvasWidth, canvasHeight, imageUrl} = this.state;\n    const layer = new Konva.Layer();\n\n    const img = new window.Image();\n    img.onload = () => {\n      const {stage} = this.state;\n      var yoda = new Konva.Image({\n        x: 0,\n        y: 0,\n        image: img,\n        width: canvasWidth,\n        height: canvasHeight,\n      });\n      layer.add(yoda);\n      layer.batchDraw();\n      stage.add(layer);\n      for (let i = 0; i < 3; i++) {\n        this.addBox(stage, i);\n      }\n      this.setState({stage: stage});\n\n    }\n    img.src = imageUrl;\n  }\n\n  download = () =>{\n    const {stage} = this.state;\n    const a = document.createElement('a');\n    const event = new MouseEvent('click');\n    a.download = 'test.jpg';\n    a.href = stage.toDataURL();\n    a.dispatchEvent(event);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"topBlock\">\n          <div className=\"topText\">excel2picture demo</div>\n        </div>\n        <div className=\"cotentBlock\">\n          <div className=\"uploadBlock\">\n            <div className=\"uploadBgBlock\">\n              <input type=\"file\" onChange={this.handleImageChange} accept=\"image/*\" />\n              <div className=\"container\" id=\"container\"></div>\n            </div>\n            <div className=\"uploadExcelBlock\">\n                <span>excelBlock</span>\n            </div>\n          </div>\n          <button className=\"readyButton\" onClick={this.download}>開始生成圖片</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}